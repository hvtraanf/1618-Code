def binary_search(arr, x):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == x:
            return mid
        elif arr[mid] < x:
            low = mid + 1
        else:
            high = mid - 1
    return -1


# Generated by CodiumAI

import pytest

class TestBinarySearch:

    # Search for an element that exists in the middle of the array
    def test_search_element_in_middle(self):
        arr = [1, 2, 3, 4, 5]
        x = 3
        result = binary_search(arr, x)
        assert result == 2

    # Search in an empty array
    def test_search_in_empty_array(self):
        arr = []
        x = 3
        result = binary_search(arr, x)
        assert result == -1

    # Search for an element that exists at the beginning of the array
    def test_element_at_beginning(self):
        arr = [1, 2, 3, 4, 5]
        x = 1
        assert binary_search(arr, x) == 0

    # Search for an element that exists at the end of the array
    def test_element_at_end(self):
        arr = [1, 2, 3, 4, 5]
        x = 5
        assert binary_search(arr, x) == 4